# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  buster 3.8 pypi:
    docker:
      - image: gorialis/discord.py:3.8-buster-pypi

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')

      # run tests
      - run:
          name: run tests
          command: |
            PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
            flake8 .
            pylint -j "$(nproc)" jishaku
            isort . --check-only
            python ./setup.py sdist bdist_egg bdist_wheel
            rm -rf jishaku
            find dist -name *.whl -exec pip install '{}' +
            PYTHONPATH="$(pwd)" pytest -vs

      # build docs
      - run:
          name: build documentation
          command: |
            cd docs && make html

      - store_artifacts:
          path: dist
          destination: distributions

      - store_artifacts:
          path: docs/_build
          destination: documentation

  buster 3.9 pypi:
    docker:
      - image: gorialis/discord.py:3.9-buster-pypi

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')

      # run tests
      - run:
          name: run tests
          command: |
            PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
            flake8 .
            pylint -j "$(nproc)" jishaku
            isort . --check-only
            python ./setup.py sdist bdist_egg bdist_wheel
            rm -rf jishaku
            find dist -name *.whl -exec pip install '{}' +
            PYTHONPATH="$(pwd)" pytest -vs

      # build docs
      - run:
          name: build documentation
          command: |
            cd docs && make html

      - store_artifacts:
          path: dist
          destination: distributions

      - store_artifacts:
          path: docs/_build
          destination: documentation

  buster 3.8 git:
    docker:
      - image: gorialis/discord.py:3.8-buster-master

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')

      # run tests
      - run:
          name: run tests
          command: |
            PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
            flake8 .
            pylint -j "$(nproc)" jishaku
            isort . --check-only
            python ./setup.py sdist bdist_egg bdist_wheel
            rm -rf jishaku
            find dist -name *.whl -exec pip install '{}' +
            PYTHONPATH="$(pwd)" pytest -vs

      # build docs
      - run:
          name: build documentation
          command: |
            cd docs && make html

      - store_artifacts:
          path: dist
          destination: distributions

      - store_artifacts:
          path: docs/_build
          destination: documentation

  buster 3.9 git:
    docker:
      - image: gorialis/discord.py:3.9-buster-master

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')

      # run tests
      - run:
          name: run tests
          command: |
            PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
            flake8 .
            pylint -j "$(nproc)" jishaku
            isort . --check-only
            python ./setup.py sdist bdist_egg bdist_wheel
            rm -rf jishaku
            find dist -name *.whl -exec pip install '{}' +
            PYTHONPATH="$(pwd)" pytest -vs

      # build docs
      - run:
          name: build documentation
          command: |
            cd docs && make html

      - store_artifacts:
          path: dist
          destination: distributions

      - store_artifacts:
          path: docs/_build
          destination: documentation

workflows:
  version: 2
  build:
    jobs:
      - "buster 3.8 pypi"
      - "buster 3.9 pypi"
      - "buster 3.8 git"
      - "buster 3.9 git"
